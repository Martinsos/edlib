name: CI

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  cpp_edlib:
    name: "Check that CPP edlib correctly builds and passes tests."
    strategy:
      matrix:
        # TODO: add some older combos also?
        os: [ubuntu-22.04, macos-14]
        compiler:
          - { package: gcc-11, cc: gcc-11, cxx: g++-11 }
          - { package: clang-15, cc: clang-15, cxx: clang++-15 }
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y ${{ matrix.compiler.package }} valgrind

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python packages
        run: |
          python3 -m pip install --upgrade pip setuptools meson ninja

      - name: Set C/CPP compiler to use
        run: |
          export CC=${{ matrix.compiler.cc }} && export CXX=${{ matrix.compiler.cxx }}

      - name: Build binaries and libraries and test them (with Meson)
        run: |
          make CXXFLAGS="-Werror" LIBRARY_TYPE=static BUILD_DIR=meson-build-static
          make CXXFLAGS="-Werror" LIBRARY_TYPE=shared BUILD_DIR=meson-build-shared

          # Check for memory leaks.
          # I run this only on linux because osx returns errors from
          # system libraries, which I would have to supress.
          if [ ${{ runner.os }} == "Linux" ]; then
            make check-memory-leaks BUILD_DIR=meson-build-static
          fi

      - name: Build binaries and libraries and test them (with CMake)
        run: |
          mkdir -p build && cd build
          CXXFLAGS="-Werror" cmake -GNinja ..
          ninja -v
          bin/runTests

  python_edlib:
    name: "Build, test and possibly deploy python bindings for edlib"
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            deploy-sdist: true
          - os: macos-12
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: bindings/python
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python deps
        run: |
          python3 -m pip install setuptools

      - name: Build edlib python module
        run: |
          make build

      - name: Test edlib python module
        run: |
          python3 test.py

      - name: Build sdist
        run: |
          make sdist

      - name: Build wheels
        run: |
          make wheels

      - name: Deploy sdist and Linux and Mac wheels to PyPI
        if: github.ref_type == 'tag'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python3 -m pip install twine

          python3 -m twine upload wheelhouse/*.whl

          # While I do want to upload wheels for both Mac and Linux,
          # it makes no sense to upload sdist twice.
          if [ ${{ matrix.deploy-sdist }} == "true" ]; then
            python3 -m twine upload dist/edlib-*.tar.gz
          fi

